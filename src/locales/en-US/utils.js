// utils
const utils ={
// utils>app-action-log-util
'utils.app-action-log-util.deploy':'Deploy',
'utils.app-action-log-util.restart':'ReStart',
'utils.app-action-log-util.delete':'Delete',
'utils.app-action-log-util.stop':'Close',
'utils.app-action-log-util.HorizontalUpgrade':'HorizontalUpgrade',
'utils.app-action-log-util.VerticalUpgrade':'VerticalUpgrade',
'utils.app-action-log-util.callback':'Callback',
'utils.app-action-log-util.create':'Create',
'utils.app-action-log-util.own_money':'Application arrears closing',
'utils.app-action-log-util.expired':'App expiration close',
'utils.app-action-log-util.share-ys':'Publish to Cloud',
'utils.app-action-log-util.share-yb':'Publish to Local',
'utils.app-action-log-util.reboot':'Application restart',
'utils.app-action-log-util.git-change':'Repo Address modification',
'utils.app-action-log-util.imageUpgrade':'Apply updates',
'utils.app-action-log-util.success':'Complete',
'utils.app-action-log-util.timeout':'Timeout',
'utils.app-action-log-util.abnormal':'Abnormal',
'utils.app-action-log-util.failure':'Failed',
'utils.app-action-log-util.ongoing':'Ongoing',
// app
'utils.app.Operation':'Running',
'utils.app.Starting':'Starting',
'utils.app.Testing':'Checking',
'utils.app.Closing':'Terminating',
'utils.app.Error':'Abnormal',
'utils.app.Insufficient_balance':'Insufficient balance, closed',
'utils.app.Closed':'Closed',
'utils.app.Trial_expired':'Trial expired',
'utils.app.Not_deployed':'Not deployed',
'utils.app.Unkonw':'Unknown',
'utils.app.Source':'Source code',
'utils.app.Yunshi':'Cloud Market',
'utils.app.image':'Image',
'utils.app.store':'Cloud Market',
'utils.app.Local':'Local Market',
'utils.app.Local_file':'Local file',
// cloud
'utils.cloud.createKubernetesSteps.Init.Title':'Controller initialization',
'utils.cloud.createKubernetesSteps.Init.Description':'Check whether the provided parameters are correct',
'utils.cloud.createKubernetesSteps.SelectZone.Title':'Select deployment zone',
'utils.cloud.createKubernetesSteps.SelectZone.Description':'Select the appropriate availability zone to purchase VPC and other resources',
'utils.cloud.createKubernetesSteps.CreateVPC.Title':'Create VPC VPC',
'utils.cloud.createKubernetesSteps.CreateVPC.Description':'Due to the restriction of cluster purchase and the principle of resource independence, you need to deploy clusters for newly created VPC network users',
'utils.cloud.createKubernetesSteps.CreateVSWitch.Title':'Creating a VSwitch',
'utils.cloud.createKubernetesSteps.CreateVSWitch.Description':'Create a switch based on the VPC created in the previous step',
'utils.cloud.createKubernetesSteps.AllocateResource.Title':'Provision resources',
'utils.cloud.createKubernetesSteps.AllocateResource.Description':'Check whether the resource type provided by the user is available in the specified area. If the resource type is not available, select resources of the same level again',
'utils.cloud.createKubernetesSteps.CreateCluster.Title':'Create cluster',
'utils.cloud.createKubernetesSteps.CreateCluster.Description':'Create a managed cluster. The cluster can be used about 10 minutes after the creation is successful',
'utils.cloud.createKubernetesSteps.InitClusterConfig.Title':'Initialize cluster configuration',
'utils.cloud.createKubernetesSteps.InitClusterConfig.Description':'Initialize the configuration data needed to create the cluster',
'utils.cloud.createKubernetesSteps.UpdateKubernetes.Title':'Configure cluster',
'utils.cloud.createKubernetesSteps.UpdateKubernetes.Description':'Connect all nodes to complete node configuration, and the time consumption depends on the network condition.',
'utils.cloud.createKubernetesSteps.InstallKubernetes.Title':'Install cluster',
'utils.cloud.createKubernetesSteps.InstallKubernetes.Description':'Connect all nodes and install kubernetes cluster. The time consumption depends on the network condition.',

'utils.cloud.updateKubernetesSteps.Init.Title':'Controller initialization',
'utils.cloud.updateKubernetesSteps.Init.Description':'Check whether the provided parameters are correct',
'utils.cloud.updateKubernetesSteps.InitClusterConfig.Title':'Initialize cluster configuration',
'utils.cloud.updateKubernetesSteps.InitClusterConfig.Description':'Configuration data required to initialize the configuration cluster',
'utils.cloud.updateKubernetesSteps.InstallKubernetes.Title':'Install cluster',
'utils.cloud.updateKubernetesSteps.InstallKubernetes.Description':'Connect all nodes and install kubernetes cluster. The time consumption depends on the network condition.',
'utils.cloud.updateKubernetesSteps.UpdateKubernetes.Title':'Configure cluster',
'utils.cloud.updateKubernetesSteps.UpdateKubernetes.Description':'Connect all nodes to complete node configuration, and the time consumption depends on the network condition.',

'utils.cloud.initRainbondSteps.Init.Title':'Controller initialization',
'utils.cloud.initRainbondSteps.Init.Description':'Check whether the provided parameters are correct',
'utils.cloud.initRainbondSteps.CheckCluster.Title':'Detect the Kubernetes cluster',
'utils.cloud.initRainbondSteps.CheckCluster.Description':'Perform fitness test on the selected kubernetes cluster',
'utils.cloud.initRainbondSteps.CreateRDS.Title':'Create and initialize the RDS resource (estimated 2 minutes)',
'utils.cloud.initRainbondSteps.CreateRDS.Description':'Used for the platform Region database, creating high-availability, entry-level, generic 2GB instances on a pay-as-you-go basis by default',
'utils.cloud.initRainbondSteps.CreateNAS.Title':'Create NAS resources',
'utils.cloud.initRainbondSteps.CreateNAS.Description':'For persistent storage of all components of the cluster, single NAS subdirectory mode is used by default',
'utils.cloud.initRainbondSteps.CreateNASMount.Title':'Create NAS mount point',
'utils.cloud.initRainbondSteps.CreateNASMount.Description':'After creating a NAS mount point, you can use this NAS resource',
'utils.cloud.initRainbondSteps.CreateLoadBalancer.Title':'Create load balancing',
'utils.cloud.initRainbondSteps.CreateLoadBalancer.Description':'Load balancing is used for the traffic entry of the cluster control end and the application gateway',
'utils.cloud.initRainbondSteps.BoundLoadBalancer.Title':'Create load balanced TCP listening',
'utils.cloud.initRainbondSteps.BoundLoadBalancer.Description':'Load balance the required ports to all platform gateway nodes',
'utils.cloud.initRainbondSteps.SetSecurityGroup.Title':'Set security group policy',
'utils.cloud.initRainbondSteps.SetSecurityGroup.Description':'By default, the port security policy that the platform gateway node needs to expose will be opened',
'utils.cloud.initRainbondSteps.AssignDefaultDomain.Title':'Assign default domain name',
'utils.cloud.initRainbondSteps.AssignDefaultDomain.Description':'You will be assigned a universal resolution default domain name as the default domain name for application access',
'utils.cloud.initRainbondSteps.InitRainbondRegion.Title':'Initialize platform cluster',
'utils.cloud.initRainbondSteps.InitRainbondRegion.Description':'Wait for platform cluster initialization to complete',
'utils.cloud.initRainbondSteps.InitRainbondRegionOperator.Title':'Start cluster initialization controller',
'utils.cloud.initRainbondSteps.InitRainbondRegionOperator.Description':'Cluster controller creation and startup',
'utils.cloud.initRainbondSteps.InitRainbondRegionImageHub.Title':'Start the local image warehouse of the cluster (estimated 5 minutes)',
'utils.cloud.initRainbondSteps.InitRainbondRegionImageHub.Description':'The readiness of the local image warehouse means that the storage, gateway and other services are ready. It is expected to take 5 minutes at this stage, depending on the network condition',
'utils.cloud.initRainbondSteps.InitRainbondRegionPackage.Title':'Localization processing of non component images required by the system (estimated 5 minutes)',
'utils.cloud.initRainbondSteps.InitRainbondRegionPackage.Description':'The non-component images required by the platform are acquired and pushed to the local image repository',
'utils.cloud.initRainbondSteps.InitRainbondRegionRegionConfig.Title':'Obtaining the cluster access configuration file (estimated at 5 minutes)',
'utils.cloud.initRainbondSteps.InitRainbondRegionRegionConfig.Description':'Wait until the cluster service is started. If the API service can be accessed, the cluster access configuration file has been obtained',

'utils.cloud.getAliyunClusterName.ManagedKubernetes':'Alibaba cloud managed cluster',
'utils.cloud.getAliyunClusterName.ServerlessKubernetes':'Aliyun Serverless cluster',
'utils.cloud.getAliyunClusterName.rke':'Host self installation cluster',
'utils.cloud.getAliyunClusterName.custom':'Self built docking cluster',

'utils.noticeWarning.error':'API request error',
'utils.noticeWarning.iPhone':"The user's mobile phone number has been registered",
'utils.noticeWarning.user_already':'User already exists',
'utils.noticeWarning.user_notExist':'User does not exist',
'utils.noticeWarning.Email_notExist':'The mailbox already exists.',
'utils.noticeWarning.iPhone_notExist':'Phone already exists',
'utils.noticeWarning.delete':'Deleting an administrator is not allowed',
'utils.noticeWarning.be_overdue':'The requested token has expired, please try to login again',
'utils.noticeWarning.AccessKey_notExist':'AccessKey does not exist, please confirm whether it is entered correctly',
'utils.noticeWarning.Mismatch':'AccessKey does not match Secret. Check whether the input is correct',
'utils.noticeWarning.type':'A task of the same type already exists',
'utils.noticeWarning.api':'Kubernetes API cannot request',
'utils.noticeWarning.ali':'Alibaba cloud container service is not created by default',
'utils.noticeWarning.alApi':'Alicloud API request failure, please try again later',
'utils.noticeWarning.defect':'The node role is missing. Please ensure that there is at least one management, calculation and etcd node',
'utils.noticeWarning.Odd_number':'The number of etcd nodes must be odd',
'utils.noticeWarning.Verification_failed':'Cluster node configuration verification failed',
'utils.noticeWarning.port':'Node port configuration is incorrect',
'utils.noticeWarning.notNull':'The KubeConfig configuration cannot be empty',
'utils.noticeWarning.Cannot_be_deleted':'The cluster cannot be deleted',
'utils.noticeWarning.Reinstall':'Cluster does not support reinstallation',
'utils.noticeWarning.configuration——actions':'The cluster does not support node configuration actions',
'utils.noticeWarning.retry ':'The initial cluster configuration is invalid. Check the configuration and try again',
'utils.noticeWarning.state':'Failed to get the initialization status of the cluster',
'utils.noticeWarning.rek':'The RKE configuration format is incorrect',
'utils.noticeWarning.rek_lose':'RKE configuration is missing',
'utils.noticeWarning.not_exist':'The initialize cluster task does not exist',
'utils.noticeWarning.RKE_already':'RKE cluster already exists',
'utils.noticeWarning.not_finished':'The last task to update the cluster has not ended',
'utils.noticeWarning.updata':'Do not submit the update cluster task repeatedly',
'utils.noticeWarning.Update_cluster':'Update cluster task does not exist',
'utils.noticeWarning.Cluster_not_finished':'Cluster does not exist',
'utils.noticeWarning.namespace':'The rbd-system namespace already exists and cannot be initialized again',
'utils.noticeWarning.task':'Cluster task does not exist',
'utils.noticeWarning.helm':'Helm store does not exist',
'utils.noticeWarning.helm_name':'Helm store name conflict',
'utils.noticeWarning.confirm':'App store address is not a legal helm warehouse address or communication is not smooth, please confirm',
'utils.noticeWarning.helm_Template':'Helm application template does not exist',
'utils.noticeWarning.helm_edition':'Helm application template version does not exist',
'utils.noticeWarning.Requesr_error':'Request parameter error',
'utils.noticeWarning.cloud_error':'Unknown cloud error, error code is{code}',

'utils.getAliyunClusterStatus.operation_Docked':'Running (docked)',
'utils.getAliyunClusterStatus.operation_Initialized':'Running (initialized)',
'utils.getAliyunClusterStatus.operation':'Running',
'utils.getAliyunClusterStatus.operation_error': 'Connection Failure',
'utils.getAliyunClusterStatus.Initializing':'Initializing',
'utils.getAliyunClusterStatus.Deleting':'Deleting',
'utils.getAliyunClusterStatus.Offline':'Offline',
'utils.getAliyunClusterStatus.Installation_failed':'Installation failed',

'utils.getTaskStatus.start':'In progress',
'utils.getTaskStatus.complete':'Completed',
'utils.getTaskStatus.inited':'Initialization complete',
'utils.getTaskStatus.Not_started':'Closed',

'utils.getAliyunCountDescribe.default-role':'Create container service default role',
'utils.getAliyunCountDescribe.open-ess':'Open ess elastic expansion service',
'utils.getAliyunCountDescribe.perm-ess':'Authorized ess elastic scaling service',
'utils.getAliyunCountDescribe.open-nas':'Open NAS service',

'utils.providers.name':'Alibaba cloud ACK',
'utils.providers.describe':'It supports Aliyun hosting cluster docking. Aliyun is responsible for cluster availability, and the platform is responsible for assisting cluster creation, platform cluster initialization and subsequent resource scheduling and management',
// date_util
'utils.date_util.available':'The message channel is not available',
'utils.date_util.ws':'The message channel is WS, please switch to HTTP protocol to access the system',
'utils.date_util.yesterday':'Yesterday',
'utils.date_util.before_yesterday':'The day before yesterday',

// error
'utils.errror.install':'The Rainbond cluster has been installed',
'utils.errror.Not_available':'The current cluster is unavailable',
'utils.errror.Upgrade_record':'Upgrade record not found',
'utils.errror.Upgrade_snapshot':'Application upgrade snapshot not found',
'utils.errror.fail':'Component deployment failed. Please try again later',
'utils.errror.non_existent':'Component dependent installation relationship does not exist and cannot be upgraded',
'utils.errror.Incomplete':'The previous task was not completed',
'utils.errror.record':'The record cannot be redeployed',
'utils.errror.rolled_back':'The record cannot be rolled back',
'utils.errror.Upgrade_only':'Only upgrade records that are not upgraded can be upgraded',
'utils.errror.try_again':'Server failure. Please try again later',
'utils.errror.not_exist':'The current cluster does not exist',

// guide
'utils.guide.app_create':'Create app',
'utils.guide.source_code_service_create':'Create components based on source code',
'utils.guide.image_service_create':'Install database based on image',
'utils.guide.service_connect_db':'Component connection database',
'utils.guide.share_app':'Publish application to Cloud',
'utils.guide.custom_gw_rule':'Configure application access policy',
'utils.guide.install_plugin':'Install the performance analysis plugin',

// message
'utils.message.announcement':'Notice',
'utils.message.news':'News',
'utils.message.warn':'Remind',

// plugin
'utils.plugin.up':'Entrance network',
'utils.plugin.in-and-out':'Entrance and export network',
'utils.plugin.down':'Export network',
'utils.plugin.perf':'Performance analysis ',
'utils.plugin.init':'Initialization',
'utils.plugin.general-plugin':'General',
'utils.plugin.exporter-plugin':'Monitor',
'utils.plugin.downstream_net_plugin':'Network Governance',
'utils.plugin.env':'Environment variable',
'utils.plugin.auto':'Active discovery',
'utils.plugin.un_define':'Independent',
'utils.plugin.upstream_port':'Application port',
'utils.plugin.downstream_port':'Downstream application port',
'utils.plugin.unbuild':'Not built',
'utils.plugin.building':'Under construction',
'utils.plugin.build_fail':'Build failed',
'utils.plugin.time_out':'Build timeout',
'utils.plugin.fixed':'Fixed',
'utils.plugin.unfixed':'Unfixed',
'utils.plugin.type':'Unknown type',
'utils.plugin.unknown':'Unknown',

// request
'utils.request.back_data':'The server successfully returned the requested data',
'utils.request.add':'New or modified data successfully.',
'utils.request.request':'A request has entered the background queue (asynchronous task)',
'utils.request.delete':'Data deletion succeeded.',
'utils.request.error':'There is an error in the request. The server does not create or modify data.',
'utils.request.No_permission':'The user does not have permission (wrong token, user name and password).',
'utils.request.authorization':'The user is authorized, but access is prohibited.',
'utils.request.record':'The request sent is for a record that does not exist. The server did not operate',
'utils.request.format':'The requested format is not available.',
'utils.request.Permanently_delete':'The requested resource is permanently deleted and will no longer be available.',
'utils.request.Validation_error':'A validation error occurred while creating an object.',
'utils.request.server_error':'Server error, please check the server',
'utils.request.Bad_Gateway ':'Bad Gateway ',
'utils.request.unavailable':'Service unavailable, server temporarily overloaded or maintained',
'utils.request.timeout':'gateway timeout ',
'utils.request.warning_url':'Warning:{url}',
'utils.request.connection_timedout':'The connection to Yunshi timed out. Please check the network',
'utils.request.Insufficient_resources':'If the cluster resources are insufficient, contact the enterprise administrator to add resources',
'utils.request.Exceeding_limit':'The memory used by the team exceeds the quota. Please contact your enterprise administrator to increase the quota',
'utils.request.Build_failed':'Build failed. Please rebuild',
'utils.request.warning':'Warning',

// role
'utils.role.admin':'Administrators',
'utils.role.developer':'Developer',
'utils.role.viewer':'Observer',
'utils.role.access':'Visitor',
'utils.role.owner':'Owner',
'utils.role.roleMaps_admin':'Enterprise administrator',
'utils.role.roleMaps_app_store':'Application market administrator',
'utils.role.component':'Component management',
'utils.role.app':'Application management',
'utils.role.gatewayRule':'Gateway access policy management',
'utils.role.certificate':'Certificate management',
'utils.role.plugin':'Plugin management',
'utils.role.teamMember':'Team member management',
'utils.role.teamRole':'Team role management',
'utils.role.teamRegion':'Team cluster management',
'utils.role.app_config_group':'Application config group management',
'utils.role.teamRegistryAuth':'ImageRepo Auth Info management',

}


export default Object.assign({},utils)
